@mixin calc-list-item($index, $class) {
  @if ($index > 0) {
    $part: percentage($index / $grid-columns);
    $margin: $part / 10;
    $columns-count: $grid-columns / $index;
    .list-item-#{$class}-#{$index} {
      width: $part - ($margin * ($columns-count - 1) / $columns-count);
      margin-right: $margin;
    }
  }
}

@mixin reset-list-item-margin($index, $class) {
  @if ($index > 0) {
    $part: $index / $grid-columns;
    $n: $grid-columns / $index;
    @if (round($n) == $n) {
      .list-item-#{$class}-#{$index} {
        &:nth-child(#{$n}n+#{$n}) {
          margin-right: 0;
        }
      }
    }
  }
}

@mixin float-list-items($class, $i: 1, $list: ".list-item-#{$class}-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .list-item-#{$class}-#{$i}";
  }
  #{$list} {
    float: left;
  }
}

@mixin loop-list-items($columns, $class) {
  @for $i from 0 through $columns {
    @include calc-list-item($i, $class);
  }
}

@mixin make-list($class) {
  @include float-list-items($class);
  @include loop-list-items($grid-columns, $class);
}

@mixin loop-list-items-margin($columns, $class) {
  @for $i from 0 through $columns {
    @include reset-list-item-margin($i, $class);
  }
}

@mixin reset-list-margins($class) {
  @include loop-list-items-margin($grid-columns, $class);
}

@include make-list(xs);

@media (min-width: $screen-sm-min) {
  @include make-list(sm);
}

@media (min-width: $screen-md-min) {
  @include make-list(md);
}

@media (min-width: $screen-lg-min) {
  @include make-list(lg);
}

@media(max-width: $screen-xs-max){
  @include reset-list-margins(xs);
}

@media(min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
  @include reset-list-margins(sm);
}

@media(min-width: $screen-md-min) and (max-width: $screen-md-max) {
  @include reset-list-margins(md);
}

@media(min-width: $screen-lg-min) {
  @include reset-list-margins(lg);
}